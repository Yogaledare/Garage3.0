@model GarageManager
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<div>Something</div>
<div class="container">
    <div class="row">
        @{
            int placesPerRow = Model.GetLimited();
            int totalPlaces = Model.GetTotalPlaces();
            int placeCounter = 0; 
            int currentSpotIndex = 1;
            while (currentSpotIndex <= totalPlaces)
            {
                if (Model.parkingMap.TryGetValue(currentSpotIndex, out var innerMap))
                {
                    foreach (var parkingSpot in innerMap)
                    {
                        var vehicleType = parkingSpot.Key;
                        int spotCount = parkingSpot.Value;
                        var widthClass = "col-md-" + spotCount;
                        var vehicleIcon = "";

                        switch (vehicleType.ToLower())
                        {
                            case "car":
                                vehicleIcon = "<i class='bi bi-car-front-fill'></i>";
                                break;
                            case "truck":
                                vehicleIcon = "<i class='bi bi-truck-front-fill'></i>";
                                break;
                            case "bus":
                                vehicleIcon = "<i class='bi bi-bus-front-fill'></i>";
                                break;
                            default:
                                vehicleIcon = "<i class='bi bi-geo-alt-fill'></i>";
                                break;
                        }
                      <div class="@widthClass p-3 text-center" style="border: 2px solid #ddd;">
                            @Html.Raw(vehicleIcon)
                        </div>
                        placeCounter += spotCount;
                        currentSpotIndex += spotCount - 1; 
                    }
                }
                else
                {
                    <div class="col-md-1 p-3 bg-light text-center">
                        Spot: @currentSpotIndex
                    </div>
                    placeCounter++;
                }
                currentSpotIndex++; 

                
                if (placeCounter >= placesPerRow || currentSpotIndex > totalPlaces)
                {
                    placeCounter = 0;
                    if (currentSpotIndex <= totalPlaces)
                    {
                        @:</div><div class="row mt-2 mb-4"> 
                    }
                }
            }
        }
    </div>
</div>